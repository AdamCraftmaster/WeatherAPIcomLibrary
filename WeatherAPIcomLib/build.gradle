
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id 'maven-publish'
    id 'signing'

    id "org.sonarqube" version "3.3"
}

group = 'me.adamcraftmaster'
version = '0.1.0-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/AdamCraftmaster/WeatherAPIcomLibrary")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.1'

    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

sonarqube {
  properties {
    property "sonar.projectKey", "AdamCraftmaster_WeatherAPIcomLibrary"
    property "sonar.organization", "adamcraftmaster"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
